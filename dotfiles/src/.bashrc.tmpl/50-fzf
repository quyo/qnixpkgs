

if [ -x "$(command -v fzf)" ]; then

  source "$(fzf-share)/completion.bash"
  source "$(fzf-share)/key-bindings.bash"

  FZF_QUYO_PATH_PREVIEW='_fzf_quyo_path_preview() { if [ -d "$@" ]; then exa -Fbg --group-directories-first --color-scale --git --time-style long-iso -la "$@" | head -500; elif [ -f "$@" ]; then bat --style=numbers --color=always --line-range :500 "$@"; else echo "Preview is not available."; fi } ; _fzf_quyo_path_preview {}'

  export FZF_DEFAULT_OPTS='--height 50% --layout=reverse --info=inline --border --ansi'
  export FZF_CTRL_T_OPTS="${FZF_DEFAULT_OPTS} --preview '${FZF_QUYO_PATH_PREVIEW}'"
  export FZF_ALT_C_OPTS="${FZF_DEFAULT_OPTS} --preview '${FZF_QUYO_PATH_PREVIEW}'"

  # Advanced customization of fzf options via _fzf_comprun function
  _fzf_comprun() {
    local command=$1
    shift

    case "$command" in
      export|unset) fzf "$@" --preview "eval 'echo \$'{}" "$@" ;;
      *)            fzf "$@" --preview "${FZF_QUYO_PATH_PREVIEW}" ;;
    esac
  }


  _fzf_setup_completion path joe


  if [ -x "$(command -v fd)" ]; then

    FZF_QUYO_FIND_ALL='fd --hidden --follow --exclude .git --color=always'
    FZF_QUYO_FIND_FILES="${FZF_QUYO_FIND_ALL} --type f"
    FZF_QUYO_FIND_DIRS="${FZF_QUYO_FIND_ALL} --type d"

    export FZF_CTRL_T_OPTS="${FZF_CTRL_T_OPTS} --prompt 'All> ' --header 'CTRL-A: All / CTRL-D: Directories / CTRL-F: Files' --bind 'ctrl-a:change-prompt(All> )+reload(${FZF_QUYO_FIND_ALL})' --bind 'ctrl-d:change-prompt(Directories> )+reload(${FZF_QUYO_FIND_DIRS})' --bind 'ctrl-f:change-prompt(Files> )+reload(${FZF_QUYO_FIND_FILES})'"

    export FZF_DEFAULT_COMMAND="${FZF_QUYO_FIND_FILES}"
    export FZF_CTRL_T_COMMAND="${FZF_QUYO_FIND_ALL}"
    export FZF_ALT_C_COMMAND="${FZF_QUYO_FIND_DIRS}"

    # Use fd (https://github.com/sharkdp/fd) instead of the default find
    # command for listing path candidates.
    # - The first argument to the function ($1) is the base path to start traversal
    # - See the source code (completion.{bash,zsh}) for the details.
    _fzf_compgen_path() {
      ${FZF_QUYO_FIND_ALL} . "$1"
    }

    # Use fd to generate the list for directory completion
    _fzf_compgen_dir() {
      ${FZF_QUYO_FIND_DIRS} . "$1"
    }

  fi


  if [ -x "$(command -v rg)" ]; then

    _fzf_quyo_search() {
      # Switch between Ripgrep launcher mode (CTRL-R) and fzf filtering mode (CTRL-F)
      local RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
      local INITIAL_QUERY="${*:-}"
      IFS=: read -ra selected < <(
        FZF_DEFAULT_COMMAND="$RG_PREFIX $(printf %q "$INITIAL_QUERY")" \
        fzf --ansi \
            --color "hl:-1:underline,hl+:-1:underline:reverse" \
            --info=inline \
            --height=100% \
            --disabled --query "$INITIAL_QUERY" \
            --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
            --bind "ctrl-f:unbind(change,ctrl-f)+change-prompt(fzf> )+enable-search+clear-query+rebind(ctrl-r)" \
            --bind "ctrl-r:unbind(ctrl-r)+change-prompt(ripgrep> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)" \
            --prompt 'ripgrep> ' \
            --delimiter : \
            --header '╱ CTRL-R (ripgrep mode) ╱ CTRL-F (fzf mode) ╱' \
            --preview 'bat --style=numbers --color=always {1} --highlight-line {2}' \
            --preview-window 'up,60%,border-bottom,+{2}+3/3,~3'
      )
      [ -n "${selected[0]}" ] && joe "+${selected[1]}" "${selected[0]}"
    }

    bind '"\C-f": "_fzf_quyo_search\n"'

  fi

fi
