# ===============================================================
# ENVIRONMENT
# ===============================================================
# The DISPLAY variable tells programs which display to use.
# This mainly affects programs running on the X server.
# However, when I use screen then I am usually using a terminal -
# and programs do not need to contact the X server.
# This results in programs waiting for some timeout when
# they start up - and this just keeps getting in my way.
# I therefore unset the DISPLAY variable with this command:
# setenv DISPLAY ''
# Text Tools rule!  :-)
#
# ===============================================================
# ESCAPE - the COMMAND CHARACTER
# ===============================================================
# escape ^aa  # default
# escape ^pp  # suggested binding for emacs users
#
# ===============================================================
# STARTUP of programs in an extra window:
# ===============================================================
# Uncomment one/some following lines to automatically let
# SCREEN start some programs in the given window numbers:
# screen -t MAIL        0 mutt
# screen -t EDIT        1 vim
# screen -t GOOGLE      2 links http://www.google.com
# screen -t NEWS        3 slrn
# screen -t WWW         4 links http://www.math.fu-berlin.de/~guckes/
#
# ===============================================================
# VARIABLES - Boolean values (on/off)
# ===============================================================
  autodetach            on              # default: on
  crlf                  off             # default: off
  deflogin              off             # default: on
# defsilence            off             # default: off
  hardcopy_append       on              # default: off
# nethack               on              # default: off
  startup_message       off             # default: on
# termcap  xterm        'AF=\E[3%dm:AB=\E[4%dm'
# terminfo xterm        'AF=\E[3%p1%dm:AB=\E[4%p1%dm'
# Matthias Kopfermann <matthias_kopfermann@gmx.de> [020222]:
  termcapinfo linux "ve=\E[?25h\E[?17;0;64c" # red
  vbell                 off             # default: ???
#
# ===============================================================
# VARIABLES - Number values
# ===============================================================
  defscrollback         5000            # default: 100
# msgminwait            3               # default: 1
  silencewait           15              # default: 30
#
# ===============================================================
# VARIABLES - Paths and Files (esp. programs)
# ===============================================================
# bufferfile:   The file to use for commands
#               "readbuf" ('<') and  "writebuf" ('>'):
# bufferfile            $HOME/.screen_exchange
#
# hardcopydir:  The directory which contains all hardcopies.
# hardcopydir           ~/.hardcopy
# hardcopydir           ~/.screen
#
# shell:  Default process started in screen's windows.
# Makes it possible to use a different shell inside screen
# than is set as the default login shell.  Halleluja! :-)
# shell                 zsh
  shell                 bash
# shell                 ksh
#
# ===============================================================
# VARIABLES - Strings
# ===============================================================
#
# soem notes on COLOR before explaining its use in
# the commands caption, hardstatus, and sorendition.
#
# COLOR:  colors codes are combinations of
# [attribute modifier] [color description]
# the manual talks of "attribute/color modifiers".
# see the manual, section "STRING ESCAPES".
#
# Color table:
# 0 Black             .    leave color unchanged
# 1 Red               b    blue
# 2 Green             c    cyan
# 3 Brown / yellow    d    default color
# 4 Blue              g    green           b    bold
# 5 Purple            k    blacK           B    blinking
# 6 Cyan              m    magenta         d    dim
# 7 White             r    red             r    reverse
# 8 unused/illegal    w    white           s    standout
# 9 transparent       y    yellow          u    underline
#
# note: "dim" is not mentioned in the manual.
#
# ===========================================
# CAPTION - shows a "caption" for the window.
# ===========================================
# a "caption" is another line which can show information -
# in addition to the hardstatus line.
#
# use caption to show window list:
# caption always "%{= kc}windows: %?%-Lw%?%{= kY}%n*%f %t%?(%u)%?%{= kc}%?%+Lw%?"
#
# caption always 'current window: %{= wr}%{+b}%50=%n%f %t%{= wb}'
# this basically just shows the current window number and title
# on its own; the "%50=" displays it in the middle of the line.
# ===============================================================
#
# ===============================
# Hardstatus Line and sorendition
# ===============================
# hardstatus: Always show the window list in the last line:
# hardstatus alwayslastline "%w"
# hardstatus alwayslastline "%H %w"
#
# use 'L' between '%' and 'w' to show the flags, too1
# hardstatus alwayslastline "%H %Lw"
#
# example by Adam Spiers <gnu-screen@adamspiers.org> :
# *without* colors:
# hardstatus alwayslastline "%?%-Lw%?%n*%f %t%?(%u)%?%?%+Lw%?"
# *with* colors:
# hardstatus alwayslastline "%?%{yk}%-Lw%?%{wb}%n*%f %t%?(%u)%?%?%{yk}%+Lw%?"
#
# This will show the current time and today's date in YYmmdd, too:
# hardstatus alwayslastline " %c | %Y%m%d |  %w"
#
# This will show today's date in mmdd and the current time, too:
# hardstatus alwayslastline " %m%d %c |  %w"
#
# combining all of these gives:
# hardstatus alwayslastline "%{rw}%H%{wk}|%c|%M%d|%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"
#
# this uses a black background foreverything execpt for
# the current window which is show on a white background.
# hostname in red, clock in green, date in yellow.
# hardstatus alwayslastline "%{= kc}%{Bk} $USER@%H %{Mk} %d.%m.%Y %c %{Bk} Load: %l %{wk}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"
  hardstatus alwayslastline "%{Wk}$USER@%H ~~~ %l %= %-w<%n %t>%+w %= %1`"
  backtick 1 1 1 sh -c 'date +"%F %T %Z"'
#
# note: the use of ANSI color sequences is deprecated.
# please upgrade to screen 3.9.13 so you can make use
# of the fairly simple color descriptions:
#
# "sorendition": set the colors for
# the "messages" and "text marking"
# (ie text you mark in copy mode):
#
# sorendition 10 99 # default!
# sorendition 02 40 # green  on black
# sorendition 02 34 # yellow on blue
# sorendition    rw # red    on white
  sorendition    kG # black  on bold green
#
#
# ============================
# Password
# ============================
# # # password SZnBqiqMtfa6k
# WARNING!!  Do NOT remove the comment
# if you don't know what this does!
# read on:
# this commands sets the *internal*
# password for the screen session.
# if this is set then a "lock" command will
# only let you in to the session after you
# enter the user's account password and then
# also the internal password for that session.
# so this gives additional safety.
# but if you forget the internal password
# then you can also forget about the session - ok?!
#
# ===============================================================
# Messages
# ===============================================================
# There are two kinds of messages:  "activity" and "bell"
# They are also the names of the commands that set the
# respective messages.  In every message there can be "meta
# strings" which are replaced by values.  A meta string starts
# with a percent sign and is then followed by one of the
# following letters: aAdDmMnstwWyY The meta strings refer to
# the current date and time or to a window title or number:
#   %t - title
#   %n - number (a single % still works)
#   %d - day
#   %D - weekday name
#   %m - month
#   %M - month name
#   %y - year (2 digit)
#   %Y - year (4 digit)
#   %w - hour:minutes (24h format)
#   %W - hour:minutes (12h format)
#   %s - seconds
#   %a - am/pm
#   %A - AM/PM
# Older versions of screen used a single '%' character
# for window titles - but since version 3.7 this is
# obsoleted by '%n' and will vanish in future releases!
# So please update your screenrc to meet this convention!
#
# ===============================================================
# "~" stands for the "bell" character
#
# activity:     This message *includes* a "beep" with '~'.
  activity              "activity in %n (%t) [%w:%s]~"
#
# bell:         This message *includes* a "beep" with '~'.
  bell                  "bell     in %n (%t) [%w:%s]~"
#
# pow_detach_msg:       Message shown when session
#                       gets power detached.
  pow_detach_msg        "BYE"
#
# vbell_msg:            Message shown when the
#                       "virtual bell" rings.
  vbell_msg             " *beep* "
#
# ==============================================================
#  BIND bind - defaults
# ==============================================================
# The "bind" command assign keys to (internal) commands
# SCREEN checks all the keys you type; you type the key
# which is known as the "command character" then SCREEN
# eats this key, too, and checks whether this key is
# "bound" to a command.  If so then SCREEN will execute it.
#
# The command "bind" allows you to chose which keys
# will be assigned to the commands.
#
# Some commands are bound to several keys -
# usually to both some letter and its corresponding
# control key combination, eg the command
# "(create) screen" is bound to both 'c' and '^C'.
#
# The following list shows the default bindings:
#
# break       ^B b
# clear       C
# colon       :
# copy        ^[ [
# detach      ^D d
# digraph     ^V
# displays    *
# dumptermcap .
# fit         F
# flow        ^F f
# focus       ^I
# hardcopy    h
# help        ?
# history     { }
# info        i
# kill        K k
# lastmsg     ^M m
# license     ,
# log         H
# login       L
# meta        x
# monitor     M
# next        ^@ ^N sp n
# number      N
# only        Q
# other       ^X
# pow_break   B
# pow_detach  D
# prev        ^H ^P p ^?
# quit        \
# readbuf     <
# redisplay   ^L l
# remove      X
# removebuf   =
# reset       Z
# screen      ^C c
# select      " '
# silence     _
# split       S
# suspend     ^Z z
# time        ^T t
# title       A
# vbell       ^G
# version     v
# width       W
# windows     ^W w
# wrap        ^R r
# writebuf    >
# xoff        ^S s
# xon         ^Q q
# ^]  paste .
# -   select -
# 0   select 0
# 1   select 1
# 2   select 2
# 3   select 3
# 4   select 4
# 5   select 5
# 6   select 6
# 7   select 7
# 8   select 8
# 9   select 9
# I   login on
# O   login off
# ]   paste .
#
# ===============================================================
# Key bindings
# ===============================================================
# Remove some default key bindings by binding
# them to "nothing" (empty right-hand-side):
#
# bind .  dumptermcap # default
  bind .
# bind ^\ quit        # default
  bind ^\
# bind \\ quit        # default
  bind \\
# bind h  hardcopy    # default
# bind h
# bind ^h ???         # default
# bind ^h
# bind }  history     # default
# bind }
#
# And here are the default bind commands if you need them:
#
# bind A title
# bind C clear
# bind D pow_detach
# bind F fit
# bind H log
# bind I login on
# bind K kill
# bind L login
# bind M monitor
# bind N number
# bind O login off
# bind Q only
# bind S split
# bind W width
# bind X remove
# bind Z reset
#
# ==============================================================
# KEY BINDING FAQ:
# ==============================================================
# FAQ: So many keys are bound to some command already -
#      which keys are unbound yet? Which are free for binding?
# A:   SCREEN does not have a command to show you
#      a table of currently unbound keys - sorry!
#      You simply have to read this setup file. ;-)
#
#      Summary:  Here is a table of the keys
#      which are not bound by default:
#      unbound:  -B--E-G--J-L---P-R-TUV--Y-
#        bound:  A-CD-F-HI-K-MNO-Q-S---WX-Z
#
# I suggest that you do not change the bindings for
# 'H' ("log") and 'M' ("monitor") as they are *really*
# useful and you might want to use them a lot;
# in this case it is recommended to use
# the defaults to avoid confusion.
# personally, I use 'A' ("title") quite often, too.
#
# If you are using "split windows"
# then you will also use the command
# associated with the keys FQSX a lot, too -
# so do not change their bindings, either!
#
# Anyway, I have bound the unbound uppercase letters
# to start programs in windows directly, ie without
# starting a new window with a shell within first.
# This simply saves shells and thus saves RAM -
# and also avoids that the title of windows is
# the name of your shell.  Also, you need not "exit"
# from a shell when you are done with some program.
# And when using "zombie mode" then the window will stay
# and you can resurrect them with the CTRL-SPACE command.
# cool! :-)
#
# enable "zombie mode":
# zombie z
# here the parameter 'z' defines the key
# which makes a zombie window go away.
#
#
# ==============================================================
# BIND and the Services:
# ==============================================================
# I am using the uppercase letters to start programs/services:
#
# the idea:
# bind <key> <command>
# this binds the key to start a windows with <command> inside.
#
# the command "screen" starts a "window" -
# and the default key is 'c' for "create".
# (i know - this *is* confusing at first.)
# with 'screen -t title" you can set a titlestring.
# the number following is the window number to be used.
# if the window number is already taken then
# the least highest available number is used.
#
#
# ===============================================================
# BINDKEY:
# ===============================================================
# [TODO briefly explain the difference between BIND and BINDKEY]
#
# Use the function keys F7 and F8
# to cycle backwards/forwards in
# the list of existing windows:
# bindkey -k k7 prev
# bindkey -k k8 next
#
# make the "kb" send a backspace (CTRL-H:)
# bindkey -d kb stuff ^H
# WARNING:  this does not work as advertised.
# it eats the "kb" when typing "dankbar" for example. :-(
#
# NumPad keybindings:
# ^[Oo /      resize =
# ^[Oj *      resize max
# ^[Om -      resize -2
# ^[Ok +      resize +2
# ^[OM Enter
#
# ===============================================================
# At the very end... show the current version and say hello :-)
# ===============================================================
# Briefly show the version number of this starting
# screen session - but only for *one* second:
  msgwait 1
  version
# change back to showing messages
# for duration of two seconds:
  msgwait 2
#
# Welcome the user:
# echo "welcome to screen :-)  -> http://www.guckes.net/screen/"
#
# ========
# Tell Vim to use a "tabstop" of '8',
# ie expands TABs to the next column
# whose number is a multiple of eight.
# EOF  vim: ts=8 et nowrap
